apiVersion: v1
kind: Template
metadata:
  name: bsi-cred-pyme-web
  annotations:
    iconClass: icon-js
    tags: nodejs, react, web-app
    template.openshift.io/provider-display-name: "Red Hat, Inc."
    openshift.io/display-name: "BanCoppel | Pymes"
    description: Build a React Web Application
message: "The following service(s) have been created in your project: ${NAME}.\n\nMore message text here"
parameters:
  - name: NAME
    displayName: "Name"
    description: "The name assigned to all of the frontend objects defined in this template."
    required: true
    value: "bsi-cred-pyme-web"
  - name: NAMESPACE
    displayName: "Namespace"
    description: "The OpenShift Namespace where the ImageStream resides."
    required: true
    value: "bsi-cr-pyme-web-stg"
  - name: MEMORY_LIMIT
    displayName: "Memory Limit"
    description: "Maximum amount of memory the container can use."
    required: true
    value: "1024Mi"
  - name: MEMORY_REQUEST
    displayName: "Memory Limit"
    description: "Maximum amount of memory the container can use."
    required: true
    value: "1024Mi"
  - name: SOURCE_REPOSITORY_URL
    description: The source URL for the application
    displayName: Source URL
    value: "https://10.26.168.19:20443/gms2/bsi-cr-pyme/front-web/bsi-cred-pyme-web.git"
    required: true
  - name: SOURCE_REPOSITORY_REF
    description: The branch name for the application
    displayName: Source Branch
    value: staging
    required: true
  - name: SOURCE_REPOSITORY_DIR
    description: The location within the source repo of the application
    displayName: Source Directory
    value: .
    required: true
  - name: SOURCE_SECRET
    description: The source secret name 
    displayName: Source secret
    value: "gitlab-bancoppel"
  - name: OUTPUT_DIR
    description: The location of the compiled static files from your web apps builder
    displayName: Output Directory
    value: build
    required: false
  - name: YARN_ENABLED
    description: A flag to enable the use of the Yarn package manager
    displayName: Yarn Enabled
    value: "true"
  - name: GIT_SSL_NO_VERIFY
    description: A flag to enable
    displayName: SSL
    value: "true"
    required: false
  - name: GITHUB_WEBHOOK_SECRET
    description: A secret string used to configure the GitHub webhook.
    displayName: GitHub Webhook Secret
    required: true
    from: '[a-zA-Z0-9]{40}'
    generate: expression
  - name: NODEJS_VERSION
    description: Version of NodeJS image to be used (10, 12, or latest).
    displayName: Version of NodeJS Image
    value: "12"
    required: true
objects:
  - apiVersion: v1
    kind: ImageStream
    metadata:
      name: '${NAME}'
      labels:
        app: '${NAME}'
    spec: {}

  - apiVersion: v1
    kind: BuildConfig
    metadata:
      name: '${NAME}'
      labels:
        app: '${NAME}'
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: '${NAME}:latest'
      postCommit: {}
      resources:
        limits:
          cpu: 1200m
          memory: 2Gi
        requests:
          cpu: 1000m
          memory: 1Gi
      source:
        contextDir: /
        git:
          uri: '${SOURCE_REPOSITORY_URL}'
          ref: '${SOURCE_REPOSITORY_REF}'
        sourceSecret: 
          name: '${SOURCE_SECRET}'
        type: Git
      strategy:
        sourceStrategy:
          env:
            - name: GIT_SSL_NO_VERIFY
              value: ${GIT_SSL_NO_VERIFY}
          from:
            kind: DockerImage
            name: "ubi8/nodejs-14"
          type: Source
      triggers:
        - github:
            secret: '${GITHUB_WEBHOOK_SECRET}'
          type: GitHub
        - type: ConfigChange
        - imageChange: {}
          type: ImageChange
    status:
      lastVersion: 0

  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: '${NAME}'
      labels:
        app: '${NAME}'
    spec:
      template:
        spec:
          containers:
            - image: '${NAME}:latest'
              name: '${NAME}'
              securityContext:
                privileged: false
              ports:
                - containerPort: 3000
                  name: http
                  protocol: TCP
              resources: {}
        metadata:
          labels:
            app: '${NAME}'
      replicas: 1
      selector:
        app: '${NAME}'
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - '${NAME}'
            from:
              kind: ImageStreamTag
              name: '${NAME}:latest'

  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: ${NAME}
      name: ${NAME}
    spec:
      ports:
        - name: http
          port: 3000
      selector:
        app: ${NAME}
      type: ClusterIP
      resources: {}

  - apiVersion: v1
    kind: Route
    metadata:
      labels:
        app: ${NAME}
      name: ${NAME}
    spec:
      port:
        targetPort: 3000
      to:
        kind: Service
        name: ${NAME}
        weight: 100
      wildcardPolicy: None