@import '../../../styles/scss/modules/var';
@import '../../../styles/scss/modules/mixins';

.group {
  position: relative;
  width: 100%;
}

@mixin config-label($color) {
  @include body-2;
  color: $color;
  left: 12px;
  margin: 0;
  pointer-events: none;
  position: absolute;
  right: 12px;
  top: 12px;
  transition: 0.2s ease all;
}

@mixin help-text-config($color) {
  @include body-3;
  color: $color;
  display: inline-block;
}

@mixin input-config($color, $size, $border-color) {
  background-color: transparent;
  border: 0;
  border-bottom: 1.5px solid $border-color;
  color: $color;
  display: block;
  font-family: $futura-book;
  font-size: $size;
  height: 50px;
  width: 100%;

  @if $size == 32px {
    padding: 0 12px;
  } @else {
    padding: 24px 12px 8px;
  }

  ~ label {
    @if $color == $gray {
      @include config-label($gray);
    }

    @if $color == $blue-shadow {
      @include config-label($blue-shadow);
    }

    @if $border-color == $red {
      @include config-label($red);
    }
  }

  ~ span {
    @if $color == $gray {
      @include help-text-config($gray);
    }

    @if $color == $blue-shadow {
      @include help-text-config($blue-shadow);
    }

    @if $border-color == $red {
      @include help-text-config($red);
    }
    opacity: 0;
  }

  &:focus {
    outline: none;

    @if $color == $gray {
      color: $gray-dark;
    }

    @if $color == $blue-shadow {
      color: $white;
    }

    @if $border-color == $gray {
      border-bottom: 1.5px solid $blue-sky;
    }
    @if $border-color == $blue-morning {
      border-bottom: 1.5px solid $yellow-summer;
    }

    ~ span {
      opacity: 1;
    }
  }

  &[type='number'] {
    appearance: textfield;
  }

  &::placeholder {
    color: $gray-light;
  }

  &:not(:placeholder-shown),
  &:disabled:not(:placeholder-shown),
  &:focus {
    ~ label {
      font-size: 12px;
      top: 4px;
    }
  }

  &:disabled {
    @if $color == $gray {
      background-color: $blue-light;
    }

    @if $color == $blue-shadow {
      background-color: $blue-night;
    }

    border-bottom: 1.5px solid $gray-light;
    color: $gray-light;
    cursor: not-allowed;

    ~ label {
      @include config-label($gray-light);
    }
  }

  &::-ms-reveal,
  &::-ms-clear {
    display: none;
  }

  &::-webkit-credentials-auto-fill-button {
    visibility: hidden;
  }

  &,
  &::before,
  &::after {
    user-select: initial;
  }

  @if $size == 32px {
    @include media('md') {
      font-size: 16px;
      padding: 8px 12px;
    }
  }
}

@mixin input-status-pr($doble: false) {
  @if $doble {
    padding-right: 44px;
  } @else {
    padding-right: 22px;
  }
}

.input-big-password {
  @include input-config($gray, 32px, $gray);
  @include input-status-pr;
}

.input-big-password-error {
  @include input-config($gray, 32px, $red);
  @include input-status-pr(true);
}

.input-big-password-inverted {
  @include input-config($blue-shadow, 32px, $blue-morning);
  @include input-status-pr;
}

.input-big-password-inverted-error {
  @include input-config($blue-shadow, 32px, $red);
  @include input-status-pr(true);
}

.input-small-password {
  @include input-config($gray, 16px, $gray);
  @include input-status-pr;
}

.input-small-password-error {
  @include input-config($gray, 16px, $red);
  @include input-status-pr(true);
}

.input-small-password-inverted {
  @include input-config($blue-shadow, 16px, $blue-morning);
  @include input-status-pr;
}

.input-small-password-inverted-error {
  @include input-config($blue-shadow, 16px, $red);
  @include input-status-pr(true);
}

.input-big {
  @include input-config($gray, 32px, $gray);
}

.input-big-error {
  @include input-config($gray, 32px, $red);
  @include input-status-pr;
}

.input-big-inverted {
  @include input-config($blue-shadow, 32px, $blue-morning);
}

.input-big-inverted-error {
  @include input-config($blue-shadow, 32px, $red);
  @include input-status-pr;
}

.input-small {
  @include input-config($gray, 16px, $gray);
}

.input-small-error {
  @include input-config($gray, 16px, $red);
  @include input-status-pr;
}

.input-small-inverted {
  @include input-config($blue-shadow, 16px, $blue-morning);
}

.input-small-inverted-error {
  @include input-config($blue-shadow, 16px, $red);
  @include input-status-pr;
}

.capitalize {
  text-transform: capitalize;
}

@mixin icon-config($color) {
  height: 20px;
  width: 20px;

  path {
    stroke: $color;
  }
}

.icon-error {
  @include icon-config($red);
}

.icon-check {
  @include icon-config($blue-storm);
}

.icon-check-inverted {
  @include icon-config($blue-morning);
}

.status-icon {
  position: absolute;
  right: 0;
  top: 14px;

  @include media('md') {
    top: 7px;
  }
}

.status-icon-password {
  position: absolute;
  right: 22px;
  top: 14px;

  @include media('md') {
    top: 7px;
  }
}

@mixin button-password-config($color) {
  background-color: transparent;
  border: 0;
  padding: 0;
  position: absolute;
  right: 0;
  top: 14px;

  &:focus {
    outline: none;
  }

  svg {
    height: 20px;
    width: 20px;

    path {
      stroke: $color;
    }

    circle {
      fill: $color;
    }

    path:last-child {
      fill: $color;
    }
  }
}

.opacity-error {
  opacity: 1 !important;
}

.button-password-inverted {
  @include button-password-config($gray);
}

.button-password {
  @include button-password-config($gray);
}
